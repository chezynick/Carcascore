{"version":3,"sources":["Components/carcascore.png","Components/Header.js","Components/Button.js","Components/QuitModal.js","Components/Navbar.js","Components/NewGame.js","firebase.js","Components/FinalScore.js","Components/PlayerTile.js","Components/ScoreBoard.js","Components/History.js","App.js","index.js"],"names":["Header","setShowQuitModal","lightMode","setLightMode","className","classnames","icon","faFortAwesome","size","onClick","src","carcascoreImage","alt","htmlFor","type","onChange","name","Button","outline","func","alternate","disabled","QuitModal","window","location","reload","Navbar","setPage","page","value","map","tab","NewGame","setNumberOfPlayers","useState","playerNumbers","setPlayerNumbers","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","FinalScore","draw","players","isSaving","setIsSaving","orderedPlayers","sort","a","b","score","faDragon","player","cn","firestore","collection","add","date","format","startOfToday","then","PlayerTile","changePlayerScore","newScore","setNewScore","addFunction","min","max","pattern","maxLength","onKeyUp","e","key","preventDefault","target","updateScore","ScoreBoard","numberOfPlayers","p1","setP1","p2","setP2","p3","setP3","p4","setP4","finalScore","setFinalScore","push","totalScore","Number","History","scores","setScores","viewGames","setViewGames","useEffect","onSnapshot","querySnapshot","items","forEach","doc","actObj","data","id","orderByDate","isBefore","Date","nickWins","filter","toLowerCase","anneWins","winsThisMonth","todaysMonth","length","winsLastMonth","subMonths","highestScore","game","highestWinningScore","largestMargin","addMarginToGameScore","winningMargin","margin","highestWinningMargin","App","showQuitModal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.208ca529.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/carcascore.ae397ce1.png\";","import React from 'react';\nimport carcascoreImage from './carcascore.png';\nimport { faFortAwesome } from '@fortawesome/free-brands-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames'\n\n\nconst Header = ({setShowQuitModal, lightMode, setLightMode }) => {\n   \n    return ( <div className={classnames(\"flex items-center w-full h-24 pt-6  md:pt-0 justify-evenly\",{\n'text-yellow-300 bg-gray-800' : !lightMode,\n'text-gray-700 bg-gray-50 shadow-lg' : lightMode\n    })}> \n    <FontAwesomeIcon icon={faFortAwesome} className=\"hidden fill-current md:block\"  size=\"5x\" />\n    <button  onClick={()=>setShowQuitModal(true)} className=\"fill-current ring-0 focus:outline-none\">\n        {!lightMode && <img src={carcascoreImage} alt=\"carcascore title\"/>}\n        {lightMode && <h1 className='text-6xl text-red-400'>CarcaScore</h1>}\n        </button>\n    <div><label htmlFor=\"lightMode\">Light Mode</label> <input type=\"checkbox\" onChange={()=>setLightMode(!lightMode)} name=\"lightMode\"/></div>\n   \n    </div> );\n}\n \nexport default Header;","import React from 'react';\nimport classnames from 'classnames'\n\n\nconst Button = ({outline, name, func, alternate, disabled, lightMode = false}) => (\n    <button disabled={disabled} onClick={()=>func()} className={classnames('w-1/2 px-2 py-2 text-center md:rounded-lg  ',{\n        'text-gray-600 bg-gray-300 border-2 border-gray-600': disabled && !lightMode,\n        'text-yellow-300 bg-black border-2 border-yellow-300 md:w-1/3  focus:outline-none' : alternate && outline && !lightMode,\n        'text-black bg-yellow-300 border-2 border-black outline-none  focus:outline-none md:w-1/3 md:rounded-lg': alternate && !outline && !lightMode,\n        'text-white bg-red-800 border-none rounded-lg outline-none md:w-32': !alternate && !outline && !lightMode,\n        'text-red-800 bg-gray-100 border-2 border-red-800 rounded-lg md:w-32' : !alternate && outline ,\n        'text-gray-600 bg-gray-300 shadow-md': disabled && lightMode,\n        'text-gray-700 border border-red-700 bg-white':  alternate && outline && lightMode,\n        'text-gray-700 bg-white shadow-lg outline-none  focus:outline-none md:w-1/3 md:rounded-lg': alternate && !outline && lightMode,\n        'text-white bg-gray-500 border-none rounded-lg outline-none md:w-32': !alternate && !outline && lightMode\n    })}>{name}</button>\n  \n   \n  \n     \n);\n \nexport default Button;","import React from 'react';\nimport Button from './Button'\n\nconst QuitModal = ({setShowQuitModal, lightMode}) => {\n    const closeModal = () =>setShowQuitModal(false)\n    const refreshPage = () => {window.location.reload()}\n    return (\n        <div className=\"absolute z-50 object-center p-4 mt-40 text-black bg-indigo-400 border-2 border-gray-700 sm:p-10\">\n            <h3>Are you sure you want to quit? all data will be lost</h3>\n            <div className=\"flex flex-col items-center justify-between w-full mt-8 md:flex-row\">\n                <Button lightMode={lightMode} name=\"Quit\" func={refreshPage}/>\n                <Button lightMode={lightMode} outline name=\"Cancel\" func={closeModal}/>\n            </div>\n        </div>\n      );\n}\n \nexport default QuitModal;","import React from 'react';\n\nconst Navbar = ({setPage, page}) => {\n    const tabs = [ {name:'New Game', value:'newGame'}, {name:'History', value:'history'}]\n    return ( \n        <div className=\"flex items-center w-full h-24 text-3xl font-semibold\">\n           {tabs.map(tab => (\n               <nav key={tab.name} className={`cursor-pointer pl-8 ${page === tab.value? 'underline': ''}`}  onClick={()=>{setPage(tab.value)}}>{tab.name}</nav>\n           ))} \n        </div>\n     );\n}\n \nexport default Navbar;","import React, { useState } from 'react';\nimport Button from './Button'\n\nconst NewGame = ({setNumberOfPlayers, setPage, lightMode}) => {\n  const [ playerNumbers, setPlayerNumbers ] = useState(false)\n  const startNew = ()=>{setPlayerNumbers(true)}\n\n    return ( \n        <div className=\"flex flex-col items-center w-full h-full mt-24 text-2xl\">\n       {!playerNumbers && ( <div className=\"flex flex-col items-center justify-center w-full\"><h1 className=\"my-12\">Start a new game??</h1>  \n           <Button lightMode={lightMode} outline alternate func={startNew} name=\"Click here\"/></div> )}\n          {playerNumbers && (\n            <div className=\"text-center\">\n             <h3 className=\"mb-6\">How many Players?</h3> \n              <div>\n                <button className=\"w-16 h-16 mx-4 text-white bg-red-600 rounded-lg\" onClick={()=>{\n                  setPage('scoreBoard');\n                  setNumberOfPlayers(2)\n                }}>2</button>\n              <button className=\"w-16 h-16 mx-4 text-white bg-yellow-300 rounded-lg\" onClick={()=>{\n                  setPage('scoreBoard');\n                  setNumberOfPlayers(3)\n                }}>3</button>\n              <button className=\"w-16 h-16 mx-4 text-white bg-blue-600 rounded-lg\" onClick={()=>{\n                  setPage('scoreBoard');\n                  setNumberOfPlayers(4)\n                }}>4</button>\n              </div>\n              \n            </div>\n          )}\n        </div> \n     );\n}\n \nexport default NewGame;","import firebase from 'firebase';\nimport 'firebase/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB43MDnf7d1ExbY9QlOu5F2_jATtdpTZwE\",\n    authDomain: \"carcascore.firebaseapp.com\",\n    projectId: \"carcascore\",\n    storageBucket: \"carcascore.appspot.com\",\n    messagingSenderId: \"687021321572\",\n    appId: \"1:687021321572:web:a993ce6859ffcdd04e1e71\",\n    measurementId: \"G-9ZKW9V7T4K\"\n  };\n // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","import React, {useState} from 'react';\nimport cn from 'tailwindcss-classnames';\nimport { startOfToday, format } from 'date-fns';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDragon } from '@fortawesome/free-solid-svg-icons'\nimport Button from './Button';\nimport firebase from '../firebase';\n\n\nconst FinalScore = ({players, lightMode}) => {\n    const [ isSaving, setIsSaving ] = useState(false)\n    const orderedPlayers = players.sort((a,b) => {return a.score < b.score ? 1 : -1} )\n    const saveFunc = () =>{\n        setIsSaving(true);\n        firebase.firestore().collection('scores').add({\n\t\t\tdate: format(startOfToday(), \"dd-MMM-yyyy\"),\n            players: players\n\t\t}).then(()=>{\n\n            window.location.reload()\n        })\n    }\n    let draw\n    if(orderedPlayers[0].score === orderedPlayers[1].score ){\n        draw = true\n    }\n    return ( \n\n<div className=\"flex flex-col items-center justify-center w-full md:mt-12\">\n    <div className=\"w-full px-4 py-4 text-5xl font-bold text-center text-black bg-indigo-200 md:w-3/4 md:py-10 md:rounded-2xl\">\n   {draw && (<div>Its a draw</div>) }\n       {!draw && <div className=\"flex items-center justify-evenly\"><FontAwesomeIcon icon={faDragon} size=\"2x\" className=\"text-black fill-current \"/> {orderedPlayers[0].name} is the winner!!</div>}\n       <div className=\"flex flex-col w-full md:my-6 justify-evenly \">\n       {orderedPlayers.map(player => (\n           <div  key={player.name} className={cn(\" w-full  text-gray-800 text-lg flex items-stretch  md:text-4xl  p-8  justify-evenly \", {\n            \"bg-yellow-300\": player.name === 'Anne',\n            \"bg-red-600\": player.name === 'Nick',\n            \"bg-green-600\": player.name === 'Amanda',\n            \"bg-blue-600\": player.name === 'Matt',\n        })} >\n               <div className=\"w-1/3\">{player.name}: </div> <div>{player.score}</div>\n           </div>\n       ))}\n       </div>\n       <Button lightMode={lightMode} func={saveFunc} disabled={isSaving} name={isSaving ? \"Saving\":\"Save\"}/>\n       </div>\n       </div>\n     );\n}\n \nexport default FinalScore;","import React, {useState } from 'react';\nimport cn from 'tailwindcss-classnames';\nimport Button from './Button'\n\nconst PlayerTile = ({player, changePlayerScore, lightMode }) => {\n    \n    const [ newScore, setNewScore ] = useState('');\n    const updateScore = (e) => {\n        e.preventDefault();\n        setNewScore(e.target.value)\n    }\n    const addFunction = () =>{\n        changePlayerScore(player, newScore );\n        setNewScore('')\n    }\n    const minusFunction = () =>{\n        const minusScore = newScore - (newScore * 2)\n        changePlayerScore(player, minusScore );\n         setNewScore('')\n    }\n    return ( \n\n        <div className={cn(\"md:w-1/3 w-full  text-gray-800 text-lg md:items-stretch md:mx-10 p-4 mb-4 md:rounded-lg flex flex-col justify-evenly relative\", {\n            \"bg-yellow-300\": player.name === 'Anne',\n            \"bg-red-600\": player.name === 'Nick',\n            \"bg-green-600\": player.name === 'Amanda',\n            \"bg-blue-600\": player.name === 'Matt',\n        })} >\n            <div className=\"flex w-full text-3xl justify-evenly\">\n           <p>{player.name}</p> \n           <p >{player.score} pts</p> </div>\n            <input type=\"numeric\" min=\"1\" max='99' pattern=\"[0-9]*\" className=\"my-2 text-center text-black outline-none md:my-6 md:py-3\" value={newScore} maxLength={2} onKeyUp={e => {if(e.key==='Enter'){addFunction()}}}  onChange={(e)=> updateScore(e)}/>\n            <div className='flex justify-between w-full text-white '>\n            <Button lightMode={lightMode} func={addFunction}  name=\"Add\"/>\n            <Button lightMode={lightMode} func={minusFunction} name=\"Minus\" outline/>\n           </div>\n        </div>\n     );\n}\n \nexport default PlayerTile;","import React, {  useState} from 'react';\nimport FinalScore from './FinalScore';\nimport Button from './Button';\nimport PlayerTile from './PlayerTile';\n\nconst ScoreBoard = ({setShowQuitModal, numberOfPlayers, lightMode }) => {\n    \n    const [ p1, setP1 ] = useState({name:'Nick', score: 0});\n    const [ p2, setP2 ] = useState({name:'Anne', score: 0});\n    const [ p3, setP3 ] = useState({name:'Amanda', score: 0});\n    const [ p4, setP4 ] = useState({name:'Matt', score: 0});\n   \n    const [ finalScore, setFinalScore ] = useState(false);\n    \n   let players = [p1,p2]\n  \n        if(numberOfPlayers === 4){\n            players.push(p3,p4)\n        }\n        if(numberOfPlayers === 3) {\n            players.push(p3)\n        }\n    \n\n    const changePlayerScore = (player, newScore) => {\n        const totalScore = (Number(player.score) + Number(newScore))\n        if(player===p1){setP1({...player, score:totalScore})}\n        if(player===p2){setP2({...player, score:totalScore})}\n        if(player===p3){setP3({...player, score:totalScore})}\n        if(player===p4){setP4({...player, score:totalScore})}\n       \n  }\n  const toggleFinalScore = () =>{\n    setFinalScore(!finalScore)\n  }\n  \n  const resetGame = ()=>{ setShowQuitModal(true)}\n    return ( \n        <div >\n            <div className=\"mb-12\">\n       {!finalScore && (<div className=\"flex flex-col flex-wrap w-full justify-evenly md:flex-row\" >\n           {players.map(player =>(\n               <PlayerTile lightMode={lightMode}  key={player.name} player={player}  changePlayerScore={changePlayerScore}/>\n           ))}\n           \n           </div>)}\n           {finalScore && (\n            <FinalScore lightMode={lightMode} players={players} />\n        )}\n         </div>\n           <footer className=\"fixed bottom-0 flex items-center w-full text-3xl justify-evenly md:mb-4\">\n              <Button lightMode={lightMode} func={toggleFinalScore} outline alternate name={!finalScore ? 'Complete?' : 'Go back?'}/>\n            <Button lightMode={lightMode} func={resetGame} alternate name=\"Quit game\" />\n     </footer>\n           \n        </div>\n     );\n}\n \nexport default ScoreBoard;","import React, {useState, useEffect } from 'react';\nimport {  format, isBefore, subMonths, startOfToday } from 'date-fns';\nimport Button from '../Components/Button'\nimport firebase from '../firebase';\n\nconst History = ({lightMode}) => {\n    //state settings\n\tconst [scores, setScores] = useState();\n    const [ viewGames, setViewGames ] = useState(false)\n\t//get recipe info from firebase firestore\n\tuseEffect(() => {\n        const data = firebase.firestore().collection('scores');\n\t\tdata.onSnapshot((querySnapshot) => {\n\t\t\tconst items = [];\n\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\tconst actObj = doc.data();\n\t\t\t\tactObj.id = doc.id;\n\t\t\t\titems.push(actObj);\n\t\t\t});\n            const orderByDate = items.sort((a,b) => {\n                return isBefore(new Date(a.date), new Date(b.date)) ? 1 : -1})\n\t\t\tsetScores(orderByDate);\n            \n        })\n\t},[]);\n    const nickWins = scores?.filter(score => score.players[0].name.toLowerCase() === 'nick');\n    const anneWins = scores?.filter(score => score.players[0].name.toLowerCase() === 'anne');\n    const winsThisMonth = (scores) =>{\n        const todaysMonth = format(startOfToday(), 'MMMyy');\n        const thisMonthScores = scores.filter(score => format(new Date(score.date),'MMMyy') === todaysMonth);\n       return thisMonthScores.length\n    }\n    const winsLastMonth = (scores) =>{\n        const todaysMonth = format(subMonths(startOfToday(), 1),'MMMyy');\n        const thisMonthScores = scores.filter(score => format(new Date(score.date),'MMMyy') === todaysMonth);\n       return thisMonthScores.length\n    }\n    const highestWinningScore = (scores) => {\n       const sortedScores = scores?.map(game => game.players[0]).sort((a,b) => a.score < b.score ? 1 : -1) || []\n       return sortedScores \n    }\n    const highestWinningMargin = (scores) => {\n        const addMarginToGameScore = scores?.map(game => {\n            const winningMargin = game.players[0].score - game.players[1].score;\n            return {...game, margin: winningMargin}\n        })\n        const sortByMargin = addMarginToGameScore?.sort((a,b) => a.margin < b.margin ? 1 : -1) || null\n        return sortByMargin \n    }\n    const highestScore = highestWinningScore(scores);\n    const largestMargin = highestWinningMargin(scores)\n    return ( \n        <div className=\"w-full px-4 lg:w-3/4\">\n         {scores && (  \n             <div className=\"p-4\"> \n                <div>Current scores: Nick: {nickWins.length} - Anne: {anneWins.length}</div>\n                <div>This month: Nick: {winsThisMonth(nickWins)} - Anne: {winsThisMonth(anneWins)}</div>\n                <div>Last month: Nick: {winsLastMonth(nickWins)} - Anne: {winsLastMonth(anneWins)}</div>\n               {highestScore?.length > 0  &&  <div>Highest winning total: { highestScore[0]?.name } - {highestScore[0]?.score}  </div>}\n                {largestMargin?.length > 0 && <div>Largest winning margin: {largestMargin[0].players[0].name} beat {largestMargin[0].players[1].name} by {largestMargin[0].margin}</div>}\n            <div>Cutest player: Anne</div>\n            </div>)}\n            <Button lightMode={lightMode} alternate func={()=>setViewGames(!viewGames)} name={viewGames ? 'Hide games' :'View all games'}/>\n        {viewGames && scores && scores.map(score => (\n            <div key={score.id} className=\"flex flex-col w-full lg:w-2/3\">\n                <div className=\"flex flex-row items-center w-full\">\n                    <h3 className=\"w-1/3 my-2 font-bold\">{score.date}</h3>\n                    {score.players.map(player => (\n                    <div className=\"flex justify-between w-2/3 px-4\" key={player.name.toLowerCase()}>{player.name.toLowerCase()} : {player.score}</div>\n                        ))}\n                </div>\n            </div>\n                \n        )\n        )}\n        </div>\n     );\n}\n \nexport default History;","import React, { useState } from 'react';\nimport Header from './Components/Header'\nimport QuitModal from './Components/QuitModal';\nimport NavBar from './Components/Navbar'\nimport NewGame from './Components/NewGame'\nimport ScoreBoard from './Components/ScoreBoard'\nimport History from './Components/History'\nimport classnames from 'classnames'\nimport './App.css';\n\nfunction App() {\nconst [ page, setPage ] = useState('newGame');\nconst [ lightMode, setLightMode] = useState(false);\nconst [ showQuitModal, setShowQuitModal] = useState(false);\nconst [ numberOfPlayers, setNumberOfPlayers] = useState();\n//state settings\n\n\n  return (\n    <div className={ classnames(\"flex flex-col items-center w-full h-auto min-h-screen \",{\n      'bg-black text-yellow-300' : !lightMode,\n      'bg-white text-gray-500' : lightMode\n    })}>\n      <Header setShowQuitModal={setShowQuitModal} setLightMode={setLightMode} lightMode={lightMode}/>\n      {showQuitModal && (<QuitModal setShowQuitModal={setShowQuitModal} lightMode={lightMode}/>)}\n      {page !== 'scoreBoard' && (<NavBar setPage={setPage} page={page} lightMode={lightMode}/>)}\n      <div className=\"w-full h-auto\">\n      {page=== \"newGame\" && (\n        <NewGame lightMode={lightMode}  setPage={setPage} setNumberOfPlayers={setNumberOfPlayers}/>\n      )}\n      \n      {page=== \"scoreBoard\" && (\n        <div className=\"md:mt-12\"> \n        <ScoreBoard lightMode={lightMode}  numberOfPlayers={numberOfPlayers} setShowQuitModal={setShowQuitModal} /></div>\n      )}\n      {page=== \"history\" && (\n        <History lightMode={lightMode}/>\n      )}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}