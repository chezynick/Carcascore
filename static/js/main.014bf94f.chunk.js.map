{"version":3,"sources":["Components/carcascore.png","Components/Header.js","Components/Button.js","Components/QuitModal.js","Components/Navbar.js","Components/NewGame.js","Components/FinalScore.js","Components/PlayerTile.js","Components/ScoreBoard.js","App.js","index.js"],"names":["Header","setShowQuitModal","className","icon","faFortAwesome","size","onClick","src","carcascoreImage","alt","Button","outline","name","func","alternate","QuitModal","window","location","reload","Navbar","setPage","value","map","tab","NewGame","setNumberOfPlayers","useState","playerNumbers","setPlayerNumbers","FinalScore","draw","orderedPlayers","players","sort","a","b","score","faDragon","player","cn","PlayerTile","changePlayerScore","newScore","setNewScore","addFunction","type","min","max","pattern","maxLength","onKeyUp","e","key","onChange","preventDefault","target","updateScore","ScoreBoard","numberOfPlayers","p1","setP1","p2","setP2","p3","setP3","p4","setP4","finalScore","setFinalScore","push","totalScore","Number","App","page","showQuitModal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.014bf94f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/carcascore.ae397ce1.png\";","import React from 'react';\nimport carcascoreImage from './carcascore.png';\nimport { faFortAwesome } from '@fortawesome/free-brands-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Header = ({setShowQuitModal}) => {\n\n   \n    return ( <div className=\"w-full pt-6 md:pt-0 h-24 bg-gray-800 flex  items-center justify-evenly text-yellow-300\"> \n    <FontAwesomeIcon icon={faFortAwesome} className=\" fill-current hidden md:block\"  size=\"5x\" />\n    <button onClick={()=>setShowQuitModal(true)} className=\"ring-0 fill-current focus:outline-none\">\n        <img src={carcascoreImage} alt=\"carcascore title\"/>\n        </button>\n    <FontAwesomeIcon icon={faFortAwesome}  size=\"5x\" className=\" fill-current hidden md:block\"/>\n    \n    </div> );\n}\n \nexport default Header;","import React from 'react';\n\nconst Button = ({outline, name, func, alternate}) => {\n    if(alternate && outline){\n        return (\n            <button onClick={()=>func()}  className=\"w-1/2 border-2 border-yellow-300 py-2 md:w-1/3 md:rounded-lg focus:outline-none text-yellow-300  text-center bg-black \">{name}</button>\n        )\n    }\n    if(alternate && !outline){\n        return (\n            <button onClick={()=>func()}  className=\" text-black w-1/2 border-2 border-black outline-none focus:outline-none py-2 md:w-1/3 md:rounded-lg  text-center bg-yellow-300\">{name}</button>\n        )\n    }\n    if (!alternate && !outline){\n        return (\n            <button onClick={()=>func()}  className=\"w-1/2 border-none outline-none py-2 md:w-32 rounded-lg text-white  text-center bg-red-800 \">{name}</button>\n        )\n    }\n    return (\n        <button onClick={()=>func()}  className=\"w-1/2 border-2 border-red-800 py-2 md:w-32 rounded-lg text-red-800  text-center bg-gray-100 \">{name}</button>\n    )\n     \n}\n \nexport default Button;","import React from 'react';\nimport Button from './Button'\n\nconst QuitModal = ({setShowQuitModal}) => {\n    const closeModal = () =>setShowQuitModal(false)\n    const refreshPage = () => {window.location.reload()}\n    return (\n        <div className=\"absolute bg-indigo-200 text-black border-2 border-gray-700 mt-40 object-center p-4 sm:p-10  z-50\">\n            <h3>Are you sure you want to quit? all data will be lost</h3>\n            <div className=\"flex w-full flex-col md:flex-row items-center justify-between mt-8\">\n                <Button name=\"Quit\" func={refreshPage}/>\n                <Button outline name=\"Cancel\" func={closeModal}/>\n            </div>\n        </div>\n      );\n}\n \nexport default QuitModal;","import React from 'react';\n\nconst Navbar = ({setPage}) => {\n    const tabs = [ {name:'New Game', value:'newGame'}, {name:'History', value:'history'}]\n    return ( \n        <div className=\"w-full flex items-center h-24 font-semibold text-3xl\">\n           {tabs.map(tab => (\n               <nav key={tab.name} className=\"cursor-pointer pl-8\"  onClick={()=>{setPage(tab.value)}}>{tab.name}</nav>\n           ))} \n        </div>\n     );\n}\n \nexport default Navbar;","import React, { useState } from 'react';\nimport Button from './Button'\n\nconst NewGame = ({setNumberOfPlayers, setPage}) => {\n  const [ playerNumbers, setPlayerNumbers ] = useState(false)\n  const startNew = ()=>{setPlayerNumbers(true)}\n\n    return ( \n        <div className=\"flex flex-col w-full h-full items-center text-2xl mt-24\">\n       {!playerNumbers && ( <div className=\"w-full flex justify-center flex-col items-center\"><h1 className=\"my-12\">Start a new game??</h1>  \n           <Button outline alternate func={startNew} name=\"Click here\"/></div> )}\n          {playerNumbers && (\n            <div className=\"text-center\">\n             <h3 className=\"mb-6\">How many Players?</h3> \n              <div>\n                <button className=\"bg-red-600 mx-4 w-16 h-16 rounded-lg text-white\" onClick={()=>{\n                  setPage('scoreBoard');\n                  setNumberOfPlayers(2)\n                }}>2</button>\n              <button className=\"bg-yellow-300 mx-4 w-16 h-16 rounded-lg text-white\" onClick={()=>{\n                  setPage('scoreBoard');\n                  setNumberOfPlayers(3)\n                }}>3</button>\n              <button className=\"bg-blue-600 mx-4 w-16 h-16 rounded-lg text-white\" onClick={()=>{\n                  setPage('scoreBoard');\n                  setNumberOfPlayers(4)\n                }}>4</button>\n              </div>\n              \n            </div>\n          )}\n        </div> \n     );\n}\n \nexport default NewGame;","import React from 'react';\nimport cn from 'tailwindcss-classnames';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDragon } from '@fortawesome/free-solid-svg-icons'\n\nconst FinalScore = ({players}) => {\n    \n    const orderedPlayers = players.sort((a,b) => {return a.score < b.score ? 1 : -1} )\n    \n    let draw\n    if(orderedPlayers[0].score === orderedPlayers[1].score ){\n        draw = true\n    }\n    return ( \n\n<div className=\"w-full md:mt-12 flex flex-col items-center justify-center\">\n    <div className=\" w-full md:w-3/4 bg-indigo-200 text-black font-bold text-5xl py-4 md:py-10 px-4 text-center md:rounded-2xl\">\n   {draw && (<div>Its a draw</div>) }\n       {!draw && <div className=\"flex items-center justify-evenly\"><FontAwesomeIcon icon={faDragon} size=\"2x\" className=\"text-black fill-current \"/> {orderedPlayers[0].name} is the winner!!</div>}\n       <div className=\"md:my-6 flex w-full justify-evenly flex-col \">\n       {orderedPlayers.map(player => (\n           <div  key={player.name} className={cn(\" w-full  text-gray-800 text-lg flex items-stretch  md:text-4xl  p-8  justify-evenly \", {\n            \"bg-yellow-300\": player.name === 'Anne',\n            \"bg-red-600\": player.name === 'Nick',\n            \"bg-green-600\": player.name === 'Amanda',\n            \"bg-blue-600\": player.name === 'Matt',\n        })} >\n               <div className=\"w-1/3\">{player.name}: </div> <div>{player.score}</div>\n           </div>\n       ))}\n       </div>\n       \n       </div>\n       </div>\n     );\n}\n \nexport default FinalScore;","import React, {useState } from 'react';\nimport cn from 'tailwindcss-classnames';\nimport Button from './Button'\n\nconst PlayerTile = ({player, changePlayerScore }) => {\n    \n    const [ newScore, setNewScore ] = useState('');\n    const updateScore = (e) => {\n        e.preventDefault();\n        setNewScore(e.target.value)\n    }\n    const addFunction = () =>{\n        changePlayerScore(player, newScore );\n        setNewScore('')\n    }\n    const minusFunction = () =>{\n        const minusScore = newScore - (newScore * 2)\n        changePlayerScore(player, minusScore );\n         setNewScore('')\n    }\n    return ( \n\n        <div className={cn(\"md:w-1/3 w-full  text-gray-800 text-lg md:items-stretch md:mx-10 p-4 mb-4 md:rounded-lg flex flex-col justify-evenly relative\", {\n            \"bg-yellow-300\": player.name === 'Anne',\n            \"bg-red-600\": player.name === 'Nick',\n            \"bg-green-600\": player.name === 'Amanda',\n            \"bg-blue-600\": player.name === 'Matt',\n        })} >\n            <div className=\"w-full text-3xl flex justify-evenly\">\n           <p>{player.name}</p> \n           <p >{player.score} pts</p> </div>\n            <input type=\"numeric\" min=\"1\" max='99' pattern=\"[0-9]*\" className=\"text-black my-2 md:my-6 outline-none md:py-3  text-center\" value={newScore} maxLength={2} onKeyUp={e => {if(e.key==='Enter'){addFunction()}}}  onChange={(e)=> updateScore(e)}/>\n            <div className='w-full flex justify-between text-white '>\n            <Button func={addFunction}  name=\"Add\"/>\n            <Button func={minusFunction} name=\"Minus\" outline/>\n           </div>\n        </div>\n     );\n}\n \nexport default PlayerTile;","import React, {  useState} from 'react';\nimport FinalScore from './FinalScore';\nimport Button from './Button';\nimport PlayerTile from './PlayerTile';\n\nconst ScoreBoard = ({setShowQuitModal, numberOfPlayers }) => {\n    \n    const [ p1, setP1 ] = useState({name:'Nick', score: 0});\n    const [ p2, setP2 ] = useState({name:'Anne', score: 0});\n    const [ p3, setP3 ] = useState({name:'Amanda', score: 0});\n    const [ p4, setP4 ] = useState({name:'Matt', score: 0});\n   \n    const [ finalScore, setFinalScore ] = useState(false);\n    \n   let players = [p1,p2]\n  \n        if(numberOfPlayers === 4){\n            players.push(p3,p4)\n        }\n        if(numberOfPlayers === 3) {\n            players.push(p3)\n        }\n    \n\n    const changePlayerScore = (player, newScore) => {\n        const totalScore = (Number(player.score) + Number(newScore))\n        if(player===p1){setP1({...player, score:totalScore})}\n        if(player===p2){setP2({...player, score:totalScore})}\n        if(player===p3){setP3({...player, score:totalScore})}\n        if(player===p4){setP4({...player, score:totalScore})}\n       \n  }\n  const toggleFinalScore = () =>{\n    setFinalScore(!finalScore)\n  }\n  \n  const resetGame = ()=>{ setShowQuitModal(true)}\n    return ( \n        <div >\n            <div className=\"mb-12\">\n       {!finalScore && (<div className=\"w-full justify-evenly flex flex-col md:flex-row flex-wrap\" >\n           {players.map(player =>(\n               <PlayerTile  key={player.name} player={player}  changePlayerScore={changePlayerScore}/>\n           ))}\n           \n           </div>)}\n           {finalScore && (\n            <FinalScore players={players} />\n        )}\n         </div>\n           <footer className=\"w-full flex justify-evenly fixed bottom-0 items-center text-3xl md:mb-4\">\n              <Button func={toggleFinalScore} outline alternate name={!finalScore ? 'Complete?' : 'Continue?'}/>\n            <Button func={resetGame} alternate name=\"Quit game\" />\n     </footer>\n           \n        </div>\n     );\n}\n \nexport default ScoreBoard;","import React, { useState } from 'react';\nimport Header from './Components/Header'\nimport QuitModal from './Components/QuitModal';\nimport NavBar from './Components/Navbar'\nimport NewGame from './Components/NewGame'\nimport ScoreBoard from './Components/ScoreBoard'\nimport './App.css';\n\nfunction App() {\nconst [ page, setPage ] = useState('newGame');\nconst [ showQuitModal, setShowQuitModal] = useState(false);\nconst [ numberOfPlayers, setNumberOfPlayers] = useState();\n\n\n  return (\n    <div className=\"bg-black flex flex-col items-center w-full h-auto min-h-screen text-yellow-300\">\n      <Header setShowQuitModal={setShowQuitModal}/>\n      {showQuitModal && (<QuitModal setShowQuitModal={setShowQuitModal}/>)}\n      {page !== 'scoreBoard' && (<NavBar setPage={setPage}/>)}\n      <div className=\"w-full h-auto\">\n      {page=== \"newGame\" && (\n        <NewGame  setPage={setPage} setNumberOfPlayers={setNumberOfPlayers}/>\n      )}\n      \n      {page=== \"scoreBoard\" && (\n        <div className=\"md:mt-12\"> \n        <ScoreBoard  numberOfPlayers={numberOfPlayers} setShowQuitModal={setShowQuitModal} /></div>\n      )}\n      {page=== \"history\" && (\n        <div>Game history coming soon</div>\n      )}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}